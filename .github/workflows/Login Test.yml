#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Login Test

env:
  PREFIX_URL: https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/
  DEVICE_VERSION: 24.10-SNAPSHOT

on:
  workflow_dispatch:
    inputs:
      INPUT_TARGET:
        description: "Target to build (platform/target/subtarget)"
        required: false
        default: "all"
  # schedule:
  #   - cron: 0 0 * * *

jobs:
  Config:
    name: Generate Config
    runs-on: ubuntu-latest
    outputs:
      TARGETS: ${{ steps.find-targets.outputs.TARGETS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Find Targets
        id: find-targets
        env:
          INPUT_TARGET: ${{ github.event.inputs.INPUT_TARGET }}
        run: |
          if [ "$INPUT_TARGET" = "all" ] || [ "$INPUT_TARGET" = "" ]; then
            export TARGETS="$(cat config/platform.config)"
          else
            export TARGETS="$INPUT_TARGET"
          fi
          JSON='{"config": ["default"], "targets":['
          FIRST=1
          for TARGET in $TARGETS; do
          [[ $FIRST -ne 1 ]] && JSON="$JSON"','
          JSON="$JSON"'"'"${TARGET}"'"'
          FIRST=0
          done
          JSON="$JSON"']}'
          echo $JSON
          echo "TARGETS=$JSON" >> $GITHUB_OUTPUT

  Docker-Images:
    name: ${{ matrix.TARGETS }}
    needs: [Config]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.Config.outputs.TARGETS)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PWD }}
 
      - name: Login To Aliyun
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PWD }}

